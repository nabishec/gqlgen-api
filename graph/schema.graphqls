type Post {
  id: ID!
  title: String!
  text: String!
  allowComments: Boolean!
  comments: CommentConnection!
}

type Comment {
  id: ID!
  post: Post!
  parent: Comment
  text: String!
}

type Query {
  posts: [Post!]!
  post(id: ID!, first: Int, after: String): Post
}

input NewPost {
  title: String!
  text: String!
  allowComments: Boolean!
}

input NewComment {
  postId: ID!
  parentId: ID
  text: String!
}

type Mutation {
  addPost(input: NewPost!): Post!
  addComment(input: NewComment!): Comment!
}

type Subscription {
  addedComment(postId: ID!): Comment!
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
}

type CommentConnection {
  edges: [CommentEdge!]!
  pageInfo: PageInfo!
}

type CommentEdge {
  node: Comment!
  cursor: String!
}